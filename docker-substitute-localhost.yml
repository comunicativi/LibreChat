version: "3.8"
services:
  api:
    image: librechat
    build:
      context: .
      target: node
    container_name: LibreChat-API
    ports:
      - 3080:3080
    depends_on:
      - rag_api
    restart: always
    extra_hosts:
    - "host.docker.internal:host-gateway"
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - NODE_ENV=production
      - MONGO_URI=${MONGO_URI}
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./librechat.yaml
        target: /app/librechat.yaml
      - ./images:/app/client/public/images
      - ./logs:/app/api/logs
      - client-dist:/app/client/dist  # Share client dist files

  client:
    image: nginx:1.27.0-alpine
    container_name: LibreChat-NGINX
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    restart: always
    #volumes:
      #- ./client/nginx.conf:/etc/nginx/conf.d/default.conf
      #- client-dist:/usr/share/nginx/html  # Use shared client dist files
      #- /etc/letsencrypt/live/chat.customprompt.it:/etc/letsencrypt/live/chat.customprompt.it
      #- /etc/letsencrypt/archive/chat.customprompt.it:/etc/letsencrypt/archive/chat.customprompt.it
      #- /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
      #- /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem

  vectordb:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data

  rag_api:
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - vectordb
    env_file:
      - .env

volumes:
  pgdata2:
  client-dist:  # Define a named volume for client dist files
